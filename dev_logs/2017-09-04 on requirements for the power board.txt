RLCS Power Board
Development log from 2017-09-04
Aaron Morrison

Let's talk about the power board. All of the subsystems of RLCS are powered by 11.1V LiPo RC car batteries. The reason we do that instead of a car battery, or double-A batteries, or a giant array of hamsters running in little treadmill things, is because they are cheap and hold a hilarious amount of energy. We bought 8 2200mAh 11.1V cells for like $20 a piece. So that's where we're at currently.

Unfortunately, Arduinos (which is what we're using to run all the things), get kinda sparky if you feed them more than 5 volts. So we need to step down the power. The original system used some vregs soldered into a piece of vero board, which worked, but worked sketchily. Moving forward, I'd like to make a dedicated PCB just for stepping power.

I really like redundancy and I'm happiest when we can reuse the same design for multiple things. With that in mind, the plan is to have a single design for a power board that will live in both the client and tower side boxes (this way if one of them fails, we have a spare that can go into either). If we're doing that, we'd might as well put a few more things on this board, basically all functionality that needs to exist in both boxes. Let's go over the requirements of this board.

- 5V power: we need this board to step down the 11.1V of incoming battery power to 5V to power the Arduinos
- 15V power: Our pressure transducers that we need on the tower side can't run on anything below 12 volts. The batteries may dip below that, so we need a boost converter to power the sensors. Ideally it'd be highly regulated as a sensor power line, but the accuracy of these sensors aren't hugely critical, so it doesn't need to be (anyways, transducers draw very little power, so we should be fine). Note that this isn't needed in the client side, but it'd be kinda ridiculous to make another board just for 15V, so we'll put that here. Also, if anyone's asking why 15V when the sensor accepts anything from 12 to 36 volts, the answer is "There's no reason. We kinda arbitrarily picked that. If you wanna do something different, feel free, it doesn't really matter"
- Fusing: The incoming battery needs to be fused to prevent fires. So we'll put a fuse on there
- Data logging: We should be logging all information on both sides of the system, so we'd might as well put that functionality on this board. We'll probably use an SD card, because they're cheap, high capacity, low power, and easy to interface with (did you know SD cards just work over SPI? That blew my mind when I found out. They just pin out to Vin, Gnd, CS, MISO, and MOSI). Plus there are dozens of arduino libraries for handling this stuff.
- 3.3V power: SD cards like 3.3 volts (we'll also need logic level shifting, but that's not that hard, and goes under the heading of "Data logging"). The XBee may also need 3.3 volts, but that's a whole nother kettle of fish that I'll cover in another log.
- Debug info: If we have space, we could put some debug information on this board (status LEDs, or 7segment display digits, or something), that would help with troubleshooting software errors. Not hugely critical, but would be nice to have, if it wouldn't put too much pressure on the software.

Anyways, yeah. We need a board that can do all those things. I'll probably upload a schematic in the next couple weeks. It'll need testing, but as long as it outputs the right amount of power and doesn't disintegrate when you shake it, I'm happy.
